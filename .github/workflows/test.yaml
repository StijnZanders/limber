name: Test

on:
  pull_request:

jobs:
  check-terraform-changes:
    name: Check terraform changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=target_branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          python -m pip install -e limber
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Test Limber
        run: make tf-plan
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform plan
        id: plan
        run: terraform plan
        continue-on-error: true
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.format.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1